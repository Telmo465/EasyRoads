SILAB Configuration
{
    Computerconfiguration Computers
    {
        include System\CompBase.inc

        includeif includes\Comp_Test.inc
    };
    
    DPUConfiguration DPUs
    {
        include System\DPUBase_SGE.inc

        
    };
};

include system\SYSBase.inc

SILAB System
{
    WatchdogPeriod = 10000;
    LaunchData1 = ("Filename",VAR_DATAFILENAME,LD_EDIT_DEFAULT,"Data");
};

includeif SGE/SGE_700.cfg
includeif MOV/MOP_700.inc
include SCNX/SCNXSGE_700.cfg
includeif SNDX/SNDX.cfg

SILAB TRF
{
    include SILAB_TRFX_700.cfg
};

SILAB SCN
{
    include SCNX/SCNX_700.cfg

    # CrossSections ###################################################

    CrossSection GUI_crossSection
	{
		ve = 60.0;
        Shoulder = {1.0, 2.4, -0.7, Shoulder1};
        Overlay = {TarNew1, 1.0};
		LaneInfos =
        {
            (0, 3.5, 0.0, Towards, Tar1, 1.0, 0.0, {(None, 0.0)}),
            (1, 3.5, 0.0, Onwards, Tar1, 1.0, 0.0, {(None, 0.0)})
        };
        LaneTransitions =
		{
            (0, 0, {(Guardrail, 0.0, 1.0, Onwards, 0.0, 0.0) }),
            (0, 1, {(Line, 0.0, 0.3, Onwards, 2, 6) }),
            (1, 1, {(Guardrail, 0.0, 1.0, Onwards, 0.0, 0.0) })
        };
	};
    

    # Modules #######################################################
    
    define Module GUI
    {
        ModuleID = 100;

        define Course U0
        {
            NodeID = 4;
            CrossSection = GUI_crossSection;

            # Segments
            Straight(342);
            Bend(169, 165);
            Bend(24, 22);
            Bend(50, 48);
            Bend(71, 67);
            Bend(381, -366);
            Bend(189, -182);
            Bend(27, 26);
            Bend(144, 139);
            Bend(67, -64);
            Bend(67, -64);
            Bend(62, -59);
            Bend(151, -144);
            Bend(53, 51);
            Bend(46, 44);
            Bend(43, 41);
            Bend(40, 38);
            Bend(54, 51);
            Bend(250, 239);
            Bend(41, -40);
            Bend(38, -36);
            Bend(21, -20);
            Bend(23, 22);
            Bend(178, -172);
            Bend(51, 48);
            Bend(28, 26);
            Bend(75, 72);
            Bend(59, 56);
            Bend(129, -125);
            Bend(36, -35);
            Bend(57, -55);
            Bend(29, -28);
            Bend(27, -25);
            Bend(185, -177);
            Bend(75, 72);
            Bend(70, 67);
            Bend(109, 104);
            Bend(66, -63);
            Bend(77, -74);
            Bend(93, -89);
            Bend(436, -417);
            Bend(54, 51);
            Bend(88, 84);
            Bend(202, 194);
            Bend(255, -245);
            Bend(140, 135);
            Bend(126, 121);
            Bend(70, -67);
            Bend(64, -61);
            Bend(147, -141);
            Bend(105, -101);
            Bend(94, 90);
            Bend(73, 69);
            Bend(109, 105);
            Bend(160, 153);
            Bend(90, -86);
            Bend(68, -65);
            Bend(106, -101);
            Bend(707, -679);
            Bend(79, 75);
            Bend(42, 40);
            Bend(33, 31);
            Bend(66, 63);
            Bend(94, 91);
            Bend(280, 276);
            Bend(45, -43);
            Bend(72, -69);
            Bend(104, -100);
            Bend(33, -31);

            HeightProfile =
            {
            (0.00, 729.00, 1000),
            (0.90, 271.00, 1000),
            (0.40, 216.00, 1000),
            (0.50, 446.00, 1000),
            (-0.00, 556.00, 1000),
            (-2.00, 748.00, 1000),
            (-0.80, 240.00, 1000),
            (-0.10, 633.00, 1000),
            (-1.10, 860.00, 1000),
            (0.60, 178.00, 1000),
            (-0.80, 998.00, 1000),
            (-0.20, 872.00, 1000),
            (0.10, 560.00, 1000),
            (-0.10, 127.00, 1000),
            (-0.70, 102.00, 1000),
            (0.00, 103.00, 1000)    
            };

            # LandscapeTypeLeft
            
            LandscapeTypeLeft FruitTree
            {
                MinObjdist = 10;
            };
            

            # LandscapeTypeRight
            
            LandscapeTypeRight Forest
            {
                MinObjdist = 2.5;
                MaxObjdist = 50;
            };
            

        };

        U0 u0;

        Connections =
        {
            Port1 <-> u0.Begin,
            u0.End <-> Port2
        };

        Traffic uw0
        {
        };
    
    };
    
     # Map: ##########################################################
    Map Map1
    {
        GUI uu00;

        SetupPoints =
        {
            ("Setup0", uu00.Port1)
        };
    };
};